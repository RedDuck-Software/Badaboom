@using Badaboom.Core.Models.Request
@using Badaboom.Client.Pages
@using System.Text.RegularExpressions;

<div class="card col-sm-10 round-30">
    <div class="d-flex align-items-center mt-3 ml-3">
        <h4><b>To Filter</b></h4>
    </div>
    
    <div class="card-body">

        @if (SelectedFilters.IsAnyFilterSelected)
        {
            <dl class="row">
                @if (SelectedFilters.BlockNumber)
                {
                    <dt class="col-sm-6">
                        <label class="clr-secondary">Block number</label>
                        <div class="form-inline">
                            <input type="text" class="form-control mb-2 mr-sm-2 round-10" @bind="TransactionFilters.BlockNumber" placeholder="Filter by block number" />
                            <button type="button" class="btn btn-round mb-2 round-10 clr-danger"
                                    @onclick="async _ => {
                                                  TransactionFilters.BlockNumber = null;
                                                  SelectedFilters.BlockNumber = false;
                                                  await Index.Delete();
                                              }">
                                Delete
                            </button>
                        </div>
                    </dt>
                }
                @if (SelectedFilters.ContractAddress)
                {
                    <dt class="col-sm-6">
                        <label class="clr-secondary">Contract address</label>
                        <div class="form-inline">
                            <input type="text" class="form-control mb-2 mr-sm-2 round-10" @bind="TransactionFilters.ContractAddress" placeholder="Filter by contract address" />
                            <button type="button" class="btn btn-round mb-2 round-10 clr-danger"
                                    @onclick="async _ => {
                                                  TransactionFilters.ContractAddress = null;
                                                  SelectedFilters.ContractAddress = false;
                                                  await Index.Delete();
                                              }">
                                Delete
                            </button>
                        </div>
                    </dt>
                }
                @if (SelectedFilters.MethodId)
                {
                    <dt class="col-sm-6">
                        <label class="clr-secondary">Method</label>
                        <div class="form-inline">
                            <input type="text" class="form-control mb-2 mr-sm-2 round-10" @bind="TransactionFilters.MethodId" placeholder="Filter by method" />
                            <button type="button" class="btn btn-round mb-2 round-10 clr-danger"
                                    @onclick="async _ => {
                                                  TransactionFilters.MethodId = null;
                                                  SelectedFilters.MethodId = false;
                                                  await Index.Delete();
                                              }">
                                Delete
                            </button>
                        </div>
                    </dt>
                }

            </dl>
            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                <button type="button" class="btn btn-round d-flex justify-content-end clr-secondary" @onclick="Index.Filter">Filter</button>
            </div>
            <hr />
        }

        <h5 class="clr-secondary">You can also add filters</h5>
        <div class="d-grid gap-2 d-md-block">
            @if (!SelectedFilters.BlockNumber)
            {<button class="btn btn-round mr-1" type="button" @onclick="_ => SelectedFilters.BlockNumber = true">Block number</button>}
            @if (!SelectedFilters.ContractAddress)
            {<button class="btn btn-round ml-1 mr-1" type="button" @onclick="_ => SelectedFilters.ContractAddress = true">Contract address</button>}
            @if (!SelectedFilters.MethodId)
            {<button class="btn btn-round ml-1" type="button" @onclick="_ => SelectedFilters.MethodId = true">Method</button>}
        </div>

    </div>
</div>

<div>
    <div class="m-1 form-inline">
    <h3 class="mt-1 mr-1">Results</h3>
        @if (SelectedFilters.BlockNumber)
        {
            <button type="button" class="btn btn-round ml-1 mr-1"
                    @onclick="async _ => { 
                                  TransactionFilters.BlockNumber = null; 
                                  SelectedFilters.BlockNumber = false;
                                  await Index.Delete(); 
                              }">
                Block number <span class="clr-danger">🗙</span>
            </button>
        }
        @if (SelectedFilters.ContractAddress)
        {
            <button type="button" class="btn btn-round ml-1 mr-1"  
                    @onclick="async _ => {
                                  TransactionFilters.ContractAddress = null;
                                  SelectedFilters.ContractAddress = false;
                                  await Index.Delete();
                              }">
                Contract address <span class="clr-danger">🗙</span>
            </button>
        }
        @if (SelectedFilters.MethodId)
        {
            <button type="button" class="btn btn-round ml-1"
                    @onclick="async _ => {
                                  TransactionFilters.MethodId = null;
                                  SelectedFilters.MethodId = false;
                                  await Index.Delete();
                              }">
                Method <span class="clr-danger">🗙</span>
            </button>
        }
    </div>
</div>

@code {
    [Parameter]
    public GetFilteredTransactionRequest TransactionFilters { get; set; }

    [Parameter]
    public Pages.Index Index { get; set; }

    static class SelectedFilters
    {
        public static bool BlockNumber { get; set; }
        public static bool ContractAddress { get; set; }
        public static bool MethodId { get; set; }

        public static bool IsAnyFilterSelected
        {
            get
            {
                if (BlockNumber || ContractAddress || MethodId)
                {
                    return true;
                }
                return false;
            }
        }
    }
}
